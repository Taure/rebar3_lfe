name: ci/cd

on:
  push:
    branches: [ main, 'release/**', 'task/**', 'feature/**', 'epic/**']
    tags: ['**']
  pull_request:
    branches: [ main, 'release/**', 'task/**', 'feature/**', 'epic/**']

jobs:

  builds:
    name: Old builds on OTP ${{ matrix.otp_version }} / ${{ matrix.os }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # XXX had to comment out 19 and 20 for now, due to copying in the code
        # from rebar3 to work around Erlang 26:
        # * https://github.com/lfe/rebar3/issues/79
        #otp_version: [19, 20, 21, 22, 23]
        otp_version: [21, 22, 23]
        # otp_version: [22]
        os: ['ubuntu-latest']

    container:
      image: erlang:${{ matrix.otp_version }}

    steps:
    - uses: actions/checkout@v4
    - name: Check rebar3 Version
      run: DEBUG=1 rebar3 --version
    - name: Compile
      run: rebar3 compile
#    - name: Xref Checks
#      run: rebar3 xref
#    - name: Dialyzer
#      run: rebar3 dialyzer
    - name: Run Unit Tests
      run: rebar3 as test eunit
    - name: Run Proper Tests
      run: rebar3 as test do proper -c
    - name: Check Coverage
      run: rebar3 as test cover -v --min_coverage=0
    - name: Get Supported 'new' Templates
      run: cd priv/testing && rebar3 new
    - name: Create LFE Library Project
      run: cd priv/testing && rebar3 new lfe-lib example-lib
    - name: Compile LFE Library Project
      run: cd priv/testing/example-lib && DEBUG=1 rebar3 lfe compile
    - name: Create LFE Main Project
      run: cd priv/testing && rebar3 new lfe-main example-main
    - name: Run LFE Main Project's Script
      run: cd priv/testing/example-main && rebar3 lfe run -- 42
    - name: Create LFE/OTP Application Project
      run: cd priv/testing && rebar3 new lfe-app example-app
    - name: Compile LFE Application Project
      run: cd priv/testing/example-app && DEBUG=1 rebar3 lfe compile
    - name: Create LFE escript Project
      run: cd priv/testing && rebar3 new lfe-escript example-escript
    - name: Escriptize LFE escript Project
      run: cd priv/testing/example-escript && rebar3 lfe escriptize
    - name: Run LFE escript Project
      run: cd priv/testing/example-escript && rebar3 lfe run-escript 1 2 5
    - name: Create LFE/OTP Release Project
      run: cd priv/testing && rebar3 new lfe-release example-release
    - name: Build LFE/OTP Release
      run: cd priv/testing/example-release && rebar3 release
   # XXX Startup keeps hanging in Github Actions ... probably need to do somehting
   #     different.
   # - name: Start LFE/OTP Release
   #   run: cd priv/testing/example-release && rebar3 lfe run-release start && sleep 5
   # - name: Ping LFE/OTP Release
   #   run: cd priv/testing/example-release && rebar3 lfe run-release ping
    - name: Versions Command Output
      run: cd priv/testing/example-release && rebar3 lfe versions
    - name: Clean Command
      run: cd priv/testing/example-lib && rebar3 lfe clean
    - name: Clean-build Command
      run: cd priv/testing/example-app && rebar3 lfe clean-build

  new-builds:
    name: New builds on OTP ${{ matrix.otp_version }} / ${{ matrix.os }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        otp_version: [24, 25, 26]
        rebar3-version: ['3.22.0']
        os: [ubuntu-latest]

    container:
      image: erlang:${{ matrix.otp_version }}

    steps:
    - uses: actions/checkout@v4
    - name: Download rebar3
      run: wget https://github.com/erlang/rebar3/releases/download/${{ matrix.rebar3-version }}/rebar3 && chmod 755 ./rebar3
    - name: Update Path
      run: echo "./" >> $GITHUB_PATH
    - name: Check rebar3 Version
      run: DEBUG=1 ./rebar3 --version
    - name: Compile
      run: ./rebar3 compile
#    - name: Xref Checks
#      run: ./rebar3 xref
#    - name: Dialyzer
#      run: ./rebar3 dialyzer
    - name: Run Unit Tests
      run: ./rebar3 as test eunit
    - name: Run Proper Tests
      run: ./rebar3 as test do proper -c
    - name: Check Coverage
      run: ./rebar3 as test cover -v --min_coverage=0
    - name: Get Supported 'new' Templates
      run: cd priv/testing && rebar3 new
    - name: Create LFE Library Project
      run: cd priv/testing && rebar3 new lfe-lib example-lib
    - name: Compile LFE Library Project
      run: cd priv/testing/example-lib && DEBUG=1 rebar3 lfe compile
    - name: Create LFE Main Project
      run: cd priv/testing && rebar3 new lfe-main example-main
    - name: Run LFE Main Project's Script
      run: cd priv/testing/example-main && rebar3 lfe run -- 42
    - name: Create LFE/OTP Application Project
      run: cd priv/testing && rebar3 new lfe-app example-app
    - name: Compile LFE Application Project
      run: cd priv/testing/example-app && DEBUG=1 rebar3 lfe compile
    - name: Create LFE escript Project
      run: cd priv/testing && rebar3 new lfe-escript example-escript
    - name: Escriptize LFE escript Project
      run: cd priv/testing/example-escript && rebar3 lfe escriptize
    - name: Run LFE escript Project
      run: cd priv/testing/example-escript && rebar3 lfe run-escript 1 2 5
    - name: Create LFE/OTP Release Project
      run: cd priv/testing && rebar3 new lfe-release example-release
    - name: Build LFE/OTP Release
      run: cd priv/testing/example-release && rebar3 release
   # XXX Startup keeps hanging in Github Actions ... probably need to do somehting
   #     different.
   # - name: Start LFE/OTP Release
   #   run: cd priv/testing/example-release && rebar3 lfe run-release start && sleep 5
   # - name: Ping LFE/OTP Release
   #   run: cd priv/testing/example-release && rebar3 lfe run-release ping
    - name: Versions Command Output
      run: cd priv/testing/example-release && rebar3 lfe versions
    - name: Clean Command
      run: cd priv/testing/example-lib && rebar3 lfe clean
    - name: Clean-build Command
      run: cd priv/testing/example-app && rebar3 lfe clean-build


